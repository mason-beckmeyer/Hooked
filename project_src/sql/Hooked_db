CREATE TABLE IF NOT EXISTS `hooked_db`.`User` (
  `userID` INT NOT NULL,
  `userEmail` VARCHAR(45) ,
  `userPassword` VARCHAR(45) ,
  `userBio` VARCHAR(255) ,
  `isAlumni` TINYINT ,
  `isCompany` TINYINT ,
  `isStudent` TINYINT ,
  `isFaculty` TINYINT ,
  PRIMARY KEY (`userID`)
  );

CREATE TABLE IF NOT EXISTS `hooked_db`.`Post` (
  `postID` INT NOT NULL AUTO_INCREMENT,
  `postText` VARCHAR(255) ,
  `postPicURL` VARCHAR(45) ,
  `dateOfPost` DATETIME NOT NULL,
  `User_userID` INT NOT NULL,
  PRIMARY KEY (`postID`, `User_userID`),
  UNIQUE INDEX `postPicURL_UNIQUE` (`postPicURL` ASC) ,
  INDEX `fk_Post_User_idx` (`User_userID` ASC) ,
  CONSTRAINT `fk_Post_User`
    FOREIGN KEY (`User_userID`)
    REFERENCES `hooked_db`.`User` (`userID`)
    );



 CREATE TABLE IF NOT EXISTS `hooked_db`.`Follows` (
  `followerID` INT NOT NULL,
  `followeeID` INT NOT NULL,
  PRIMARY KEY (`followerID`, `followeeID`),
  INDEX `fk_Followee_User1_idx` (`followerID` ASC) ,
  INDEX `fk_Followee_User2_idx` (`followeeID` ASC) ,
  CONSTRAINT `fk_Followee_User1`
    FOREIGN KEY (`followerID`)
    REFERENCES `hooked_db`.`User` (`userID`)
  CONSTRAINT `fk_Followee_User2`
    FOREIGN KEY (`followeeID`)
    REFERENCES `hooked_db`.`User` (`userID`)
    );

